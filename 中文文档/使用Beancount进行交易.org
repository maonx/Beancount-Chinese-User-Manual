#+TITLE: 使用 Beancount 进行交易
#+DATE: [2020-04-22 周三]
#+AUTHOR: Martin Blais

* 简介
本文档是《命令行会计食谱》的配套文档，专门介绍了 Beancount 中的交易和投资主题。在阅读本文档之前，你可能应该先读过复式记账法的介绍。

说到股票交易这个话题，需要先讨论一下“盈亏”，也叫资本收益或损失，简称 P/L。对于新手来说，P/L 这个概念对多次交易的盈亏的概念是很难理解的，我甚至看到过专业的交易员在不同的时间段内对 P/L 的理解有所不同。这一点是值得花时间来解释的，而且有必要了解如何在复式记账系统中对交易进行预定。

本讨论将结合如何在 Beancount 中预订这些交易的详细示例进行讨论。有一个相关的、积极的改进 Beancount 预订方法的建议，您可能也会感兴趣。这里不讨论递延税项的基础，而是在更一般的食谱中讨论。

* 什么是盈亏？
假设你在 E*Trade 折扣经纪公司有一个账户，你买了一些公司的股票，比如说 IBM。如果你买入 10 股 IBM 公司的股票，当它的价格是每股 160 美元时，你将花费 1600 美元。这个价值就是我们所说的 "账面价值"，或者说是 "成本"。这就是你得花多少钱才能买到的股票，也叫 "仓位"。这就是你在 Beancount 中输入这个交易的方式。

#+BEGIN_SRC beancount
2014-02-16 * "Buying some IBM"
  Assets:US:ETrade:IBM                 10 IBM {160.00 USD}
  Assets:US:ETrade:Cash          -1600.00 USD
#+END_SRC

在实际操作中，你可能会向 E*Trade 支付一定的佣金来做这项服务，所以为了完整，我们把这一点放进去。

#+BEGIN_SRC beancount
2014-02-16 * "Buying some IBM"
  Assets:US:ETrade:IBM                 10 IBM {160.00 USD}
  Assets:US:ETrade:Cash          -1609.95 USD
  Expenses:Financial:Commissions     9.95 USD
#+END_SRC

这样就可以告诉 Beancount "按成本价"存入一些单位，在本例中，"IBM 以每股 160 美元的成本价"存入单位。这笔交易之所以能够平衡，因为它的分支总和为 0。10 x 160 + -1609.95 + 9.95 = 0。另外要注意的是，我们选择使用一个专门用于 IBM 的股票的子账户；这并不是严格意义上的必要，但在资产负债表中报告时很方便，因为它将自然而然地将你的每一个仓位的所有股票汇总到自己的线上。拥有一个 "现金 "子账户也强调了你在那里的未投资资金不会提供任何回报。

第二天开盘，IBM 的股价为每股 170 美元。在这种情况下，我们将称之为"价格"，你的仓位的"市值"，也就是你的股票的数量 × 市价，即 10 股 × 每股 170 美元 = 1700 美元。

这两个数额之间的区别，就是我们所说的 P/L。

市值 - 账面价值 = P/L

10 × 170 美元 - 10 × 160 美元 = 1700 美元 - 1600 美元 = 100 美元(利润)

我们将把正数称为 “利润”，如果是负数，则称为 “亏损”。

* 已实现和未实现的 P/L
前一节的利润称为"未实现利润"。那是因为这些股票还没有实际卖出——这是个假设的利润：如果我能按市值卖出这些股票，这就是我能拿到的钱。我在上一节提到的 100 美元实际上是 "未实现的 P/L"。

那么，假设你喜欢这种未实现的利润，你觉得 IBM 涨价是暂时的运气。你决定将这 10 股中的 3 股以每股 170 美元的价格卖给市场。这些股票的利润现在就可以"变现"了。

市值-账面价值=P/L

3 × 170 美元 - 3 × 160 美元 = 3 × (170 - 160) = 30 美元(利润)

这30美元是一个"变现的P/L"。你的仓位的剩余部分仍显示为未实现利润，也就是说，在你卖出之前，价格可能会波动得更厉害。

市场价值-账面价值=P/L

7×170美元-7×160美元=70美元

这就是你将如何预订你在Beancount的仓位的销售（同样包括佣金）。

#+BEGIN_SRC beancount
2014-02-17 * "Selling some IBM"
  Assets:US:ETrade:IBM                 -3 IBM {160.00 USD}
  Assets:US:ETrade:Cash            500.05 USD
  Expenses:Financial:Commissions     9.95 USD
#+END_SRC

你注意到这里发生了什么有趣的事情吗? -3×160=-480，-480+500.05+9.95=30...........这笔交易并没有平衡到零！问题是我们卖出的3只股票换取了510美元现金。这是因为我们卖出时的实际价格是170美元：3×170=510美元。这就是我们需要核算利润的地方，通过增加另一段，将吸收这部分利润，并方便地自动计算和跟踪我们的利润。

#+BEGIN_SRC beancount
2014-02-17 * "Selling some IBM"
  Assets:US:ETrade:IBM                 -3 IBM {160.00 USD}
  Assets:US:ETrade:Cash            500.05 USD
  Expenses:Financial:Commissions     9.95 USD
  Income:US:ETrade:PnL
#+END_SRC

最后一个段会被Beancount自动填成-30美元，因为我们一次过帐而没有金额（记住，在没有信用卡和借方的复式记账系统中，"收入"账户的利润是负数）。这个数字是政府对你的税款的关注点。

综上所述，你现在有：

仓位7 "账面价值160美元的股票"=1120美元(其账面价值)

已实现的市盈率为30美元

未实现的市盈率为70美元

现在说到这里，有人会上蹿下跳地说:"但是，等等，等一下! 我卖每股170美元，不是每股160美元，为什么要把160美元放在这里?" 答案是你没有以每股170美元的价格出售股票。为了解释这个问题，我需要绕一点弯路来解释一下我们如何记账的事情......

那么，我们是如何记账的呢？

其实很简单：当Beancount在账户中存储东西的时候，我们会使用一种叫做 "库存 "的东西。想象一下，一个 "库存 "就是一个写着该账户名称的袋子。每个账户都有一个这样的袋子，用来装着这个账户在某一特定时间点上的东西，也就是这个账户当时的 "余额"。想象一下，它所装的东西上都贴着一个小标签，上面写着它们的成本，也就是购买这些东西所付出的代价。每当你把一个东西放进袋子里，就给这个东西贴上一个新的标签。要想让事情顺利进行，所有的东西都需要贴上标签。在我们的例子中，袋子里有10个东西"以每股160美元的价格买入了IBM的股票"。我们把IBM放在账户中的语法看起来有点误导；我们写道:

#+BEGIN_SRC beancount 
Assets:US:ETrade:IBM                 10 IBM {160.00 USD}
#+END_SRC

但实际上，这一点被Beancount理解为更接近下面的语法：

#+BEGIN_SRC beancount
Assets:US:ETrade:IBM                 10 {IBM 160.00 USD}
#+END_SRC

但是......写这个会很烦人，所以我们用了一个对人类更直观的语法。

所以问题是，你不能减去{IBM的单位，170. 00美元}..... 因为那个袋子里根本就没有。袋子里有的是{IBM的单位，价格是160. 00美元}。你只能把这些拿出来。

现在说了这么多，你看出来了吧，我们换股票的金额是如何真正帮助我们跟踪P/L的？我们实际上没有任何地方需要说明我们卖出股票的价格。事实上，我们收到了一定数量的现金，而这些现金与我们卖出的头寸的成本不同，这才导致了不平衡，我们将其记为资本收益。

嗯...... Beancount维护着一个价格数据库，如果能把价格记录下来并附加到交易中，不是很好吗？的确是这样，Beancount允许你将价格附加到那个帖子中，但为了平衡交易，它完全忽略了它。它的存在主要是为了做文档，如果你写脚本的话，你可以用它。而如果你使用了beancount.plugins.implicit_prices插件，它就会自动合成一个价格条目，用来丰富我们的历史价格数据库，可以用来报告账户内容的市场价值（具体细节如下）。

因此，卖出这些股票的完整和最终交易应该是:

#+BEGIN_SRC beancount
2014-02-17 * "Selling some IBM"
  Assets:US:ETrade:IBM          -3 IBM {160.00 USD} @ 170.00 USD
  Assets:US:ETrade:Cash          500.05 USD
  Expenses:Financial:Commissions   9.95 USD
  Income:US:ETrade:PnL
#+END_SRC

* 交易份额
